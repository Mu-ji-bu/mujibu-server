components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        teamId:
          type: string
        avatar:
          type: string
        name:
          type: string
        nickname:
          type: string
        birthDate:
          type: string
          format: date-time
        gender:
          type: integer
          enum: [0, 1, 2] # 'male', 'female', 'other'
        email:
          type: string
          format: email
        phone:
          type: string
        subscribeNewsletter:
          type: boolean
        category:
          type: array
          items:
            type: string
            enum: ['藝術', '設計', '電影', '音樂', '科技', '出版']
        contactName:
          type: string
        commentName:
          type: string
        contactPhone:
          type: string
        countryCode:
          type: string
        postalCode:
          type: string
        city:
          type: string
        district:
          type: string
        address:
          type: string
        role:
          type: string
          enum: ['user', 'admin']
        isEmailVerified:
          type: boolean
      required:
        - name
        - email
        - role
      example:
        id: 6468849af7727e67acfcba4d
        email: 000testonly@gmail.com
        name: 專用測試
        role: user
        isEmailVerified: false
        subscribeNewsletter: false
        notifications: []
        collects: []

    Project:
      type: object
      properties:
        id:
          type: string
        proposer:
          type: string
        name:
          type: string
        description:
          type: string
        image:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        type:
          type: string
          enum: ['0', '1', '2', '3']
        status:
          type: string
          enum: ['0', '1', '2', '3', '4', '5', '6']
        form:
          type: string
          enum: ['0', '1']
        category:
          type: string,
          enum: ['0', '1', '2', '3', '4', '5']
        fundraisingGoal:
          type: number
        backers:
          type: number
        currentAmount:
          type: number
        url:
          type: string
        content:
          type: string
        score:
          type: number
        carousel:
          type: boolean
        attachmentLink:
          type: string,
      required:
        - name
        - description
        - image
        - startTime
        - endTime
        - fundraisingGoal
        - content
      example:
        id: 647c9e1d314fb4345676af18
        proposer: Pauline Ankunding
        name: Balance衡壓坐墊｜市場唯一衡壓概念健康坐墊，坐出 Q 軟好體態！11
        description: Minus inventore id pariatur vero. Molestiae suscipit amet. Illum recusandae distinctio omnis harum doloremque cum iusto.
        image: https://picsum.photos/seed/AbME3ZH/640/480
        startTime: 2023-05-14T04:13:02.202Z
        endTime: 2024-01-23T17:49:10.741Z
        type: 0
        status: 2
        form: 0
        category: 0
        fundraisingGoal: 3419469
        backers: 9964
        currentAmount: 2475942
        currentAmountPercentage: 73
        url: https://ragged-hammock.biz/
        content: <div>Odio perspiciatis recusandae laboriosam pariatur minus. Non officia deleniti amet eos animi id ipsam unde. Commodi neque cumque dolore et.</div>
        score: 5
        carousel: false
        attachmentLink:
        createdAt: 2023-06-04T14:22:21.725Z

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
